import cv2
import matplotlib.pyplot as plt
import numpy as np
from ultralytics import YOLO
from pathlib import Path

# ✅ 모델 로드
model = YOLO("/content/runs/detect/CHV-dataset2/weights/best.pt")  # YOLOv8 형식 모델

# ✅ 클래스 이름 (CHV 데이터셋 기준)
class_names = {
    0: "Helmet",
    1: "Vest",
    2: "Person",
    3: "Mask",
    4: "Gloves",
    5: "Boots"
}

# ✅ 테스트 이미지 경로
image_path = "/content/chv-DATASET-1/test/images/ppe_0001_jpg.rf.09de01d4574daed0b6b70431735c36fb.jpg"

# ✅ 이미지 원본 로드 및 복사본 생성
img = cv2.imread(image_path)
img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

# ✅ 추론 실행 (confidence 낮게 설정해 최대 탐지)
results = model.predict(source=image_path, conf=0.5, verbose=False)

# ✅ 결과 파싱
boxes = results[0].boxes  # 첫 번째 이미지에 대한 결과

if boxes is not None and boxes.data.shape[0] > 0:
    for box in boxes:
        x1, y1, x2, y2 = map(int, box.xyxy[0].tolist())
        conf = float(box.conf[0])
        cls_id = int(box.cls[0])
        label = class_names.get(cls_id, f"class_{cls_id}")

        # 바운딩 박스 & 라벨 그리기
        cv2.rectangle(img_rgb, (x1, y1), (x2, y2), (0, 255, 0), 2)
        cv2.putText(img_rgb, f'{label} {conf:.2f}', (x1, y1 - 10),
                    cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)

# ✅ 출력
plt.figure(figsize=(10, 10))
plt.imshow(img_rgb)
plt.axis('off')
plt.title("YOLOv8 Detection - yolo12")
plt.show()
